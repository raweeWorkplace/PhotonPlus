/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import controller.functionTools;
import beans.instock_entry_pojo;
import controller.expences_controller;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ranjan
 */
public class expencesPanel extends javax.swing.JPanel {
    DefaultTableModel voucher_item_model;
    functionTools fnTools;
    instock_entry_pojo pojo;
    expences_controller controller;
    private String sql= "FROM instock_entry_pojo";
    /**
     * Creates new form stockInPanel
     */
    
    public expencesPanel() {
        initComponents();
        controller = new expences_controller();
        fnTools = new functionTools();
        controller.fill_table(itemTable, sql);
        itemTable.getTableHeader().setFont(new Font("SansSerif", Font.ITALIC, 16));
        
        
    }
    
    private void resetStockDetails(){
        txtItemName.setText("");
        txtQuan.setText("");
        txtpurchaseRate.setText("");
    }
    
   
    private boolean validateData(){
        if(txtItemName.getText().isEmpty()){
            txtItemName.requestFocus();
            JOptionPane.showMessageDialog(null, "Enter Item Name");
            return false;
        }else if(txtQuan.getText().isEmpty()){
            txtQuan.requestFocus();
            JOptionPane.showMessageDialog(null, "Enter Quantity of Item");
            return false;            
        }else if(txtpurchaseRate.getText().isEmpty()){
            txtpurchaseRate.requestFocus();
            JOptionPane.showMessageDialog(null, "Enter total cost");
            return false;
        }
        return true;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        addStockButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtItemName = new javax.swing.JTextField();
        txtQuan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtpurchaseRate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();

        setBackground(java.awt.Color.darkGray);
        setBorder(null);

        jPanel1.setBackground(java.awt.Color.darkGray);
        jPanel1.setBorder(null);

        jPanel3.setBackground(java.awt.Color.darkGray);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        addStockButton.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        addStockButton.setText("Add Stock");
        addStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockButtonActionPerformed(evt);
            }
        });
        addStockButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addStockButtonKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Item Name :");

        txtItemName.setBackground(java.awt.Color.darkGray);
        txtItemName.setFont(new java.awt.Font("Century Schoolbook L", 1, 18)); // NOI18N
        txtItemName.setForeground(java.awt.Color.white);
        txtItemName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtItemNameFocusGained(evt);
            }
        });
        txtItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemNameActionPerformed(evt);
            }
        });
        txtItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemNameKeyReleased(evt);
            }
        });

        txtQuan.setBackground(java.awt.Color.darkGray);
        txtQuan.setFont(new java.awt.Font("Century Schoolbook L", 1, 18)); // NOI18N
        txtQuan.setForeground(java.awt.Color.white);
        txtQuan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuanKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQuanKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Unit:");

        jLabel4.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Total Expense :");

        txtpurchaseRate.setBackground(java.awt.Color.darkGray);
        txtpurchaseRate.setFont(new java.awt.Font("Century Schoolbook L", 1, 18)); // NOI18N
        txtpurchaseRate.setForeground(java.awt.Color.white);
        txtpurchaseRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpurchaseRateKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpurchaseRateKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Category :");

        cmbCategory.setBackground(java.awt.Color.white);
        cmbCategory.setFont(new java.awt.Font("Century Schoolbook L", 1, 18)); // NOI18N
        cmbCategory.setForeground(java.awt.Color.white);
        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auto and Transport", "Breakfast and Food", "Investment", "Bills and Utilities", "Taxes", "Misc", "Maintainance", "Stationery", "Electronics", "Salary", "Rent", " " }));
        cmbCategory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbCategoryKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtpurchaseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addStockButton)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbCategory, txtItemName});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(txtQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpurchaseRate)
                    .addComponent(addStockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addStockButton, cmbCategory, jLabel3, jLabel4, txtItemName});

        itemTable.setBackground(java.awt.Color.darkGray);
        itemTable.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        itemTable.setForeground(java.awt.Color.white);
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Category", "Item", "Qnty", "Expense"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
        itemTable.setRowHeight(24);
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableMouseClicked(evt);
            }
        });
        itemTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemTableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(itemTable);
        if (itemTable.getColumnModel().getColumnCount() > 0) {
            itemTable.getColumnModel().getColumn(0).setResizable(false);
            itemTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            itemTable.getColumnModel().getColumn(1).setResizable(false);
            itemTable.getColumnModel().getColumn(2).setResizable(false);
            itemTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            itemTable.getColumnModel().getColumn(3).setResizable(false);
            itemTable.getColumnModel().getColumn(3).setPreferredWidth(5);
            itemTable.getColumnModel().getColumn(4).setResizable(false);
            itemTable.getColumnModel().getColumn(4).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockButtonActionPerformed
        pojo = new instock_entry_pojo();
        pojo.setItem_name(txtItemName.getText().toUpperCase());
        pojo.setUnit(Integer.parseInt(txtQuan.getText()));
        pojo.setTotal_exp(Double.parseDouble(txtpurchaseRate.getText()));
        pojo.setCategory(cmbCategory.getSelectedItem().toString());
        Date date = new Date();
        pojo.setDate(date);
        
        if(validateData()){
        controller.enter_expences(pojo);
        resetStockDetails();
        controller.fill_table(itemTable, sql);
        txtItemName.requestFocus();
        }

              
    }//GEN-LAST:event_addStockButtonActionPerformed

    private void txtQuanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuanKeyPressed
       int key = evt.getKeyCode();
        if ((key >= KeyEvent.VK_0 && key <= KeyEvent.VK_9) || (key >= KeyEvent.VK_NUMPAD0 && key <= KeyEvent.VK_NUMPAD9) || (key == KeyEvent.VK_BACK_SPACE)) {
            txtQuan.setEditable(true);
            
        } else if ((key == KeyEvent.VK_ENTER)&&(!txtQuan.getText().isEmpty())) {
            txtpurchaseRate.requestFocus();
        }else {
            evt.consume();
            JOptionPane.showMessageDialog(null, "INVALID INSERT");
            txtQuan.setText("");
        }
       
    }//GEN-LAST:event_txtQuanKeyPressed

    private void txtQuanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuanKeyReleased
        
    }//GEN-LAST:event_txtQuanKeyReleased

    private void txtpurchaseRateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpurchaseRateKeyReleased
        
    }//GEN-LAST:event_txtpurchaseRateKeyReleased

    private void txtItemNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyReleased
       String sql1= "FROM instock_entry_pojo where item_name like '"+txtItemName.getText()+"%'";
       controller.fill_table(itemTable, sql1);
    }//GEN-LAST:event_txtItemNameKeyReleased

    private void txtItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemNameActionPerformed

    private void itemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseClicked
       
    }//GEN-LAST:event_itemTableMouseClicked

    private void txtpurchaseRateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpurchaseRateKeyPressed
        char car = evt.getKeyChar();
        int key = evt.getKeyCode();
        if ((key == KeyEvent.VK_ENTER)&&(!txtpurchaseRate.getText().isEmpty())) {
            addStockButton.requestFocus();
        }
        
        else if((car < '0'|| car > '9') && txtpurchaseRate.getText().contains(".") && (car!=(char)KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Invalid Insert");
            txtpurchaseRate.setText("");
        }
        else if((car < '0'|| car > '9') && (car!='.') && (car!=(char)KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Invalid Insert");
            txtpurchaseRate.setText("");
        }
    }//GEN-LAST:event_txtpurchaseRateKeyPressed

    private void txtItemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyPressed
        int key = evt.getKeyCode();
        if ((key == KeyEvent.VK_ENTER)&&(!txtItemName.getText().isEmpty())) {
            txtQuan.requestFocus();
        }else if ((key == KeyEvent.VK_ESCAPE)) {
            txtItemName.requestFocus();
            txtItemName.setText("");
            
        }
        if ((key == KeyEvent.VK_ENTER)&&(!txtItemName.getText().isEmpty())) {
         if(!fnTools.isEmpty(itemTable)){
        voucher_item_model  =(DefaultTableModel)itemTable.getModel();
        String Name = voucher_item_model.getValueAt(0, 1).toString();
        txtItemName.setText(Name);
            txtQuan.requestFocus();
         }
        }else if ((key == KeyEvent.VK_DOWN)) {
            if(!fnTools.isEmpty(itemTable)){
            voucher_item_model  =(DefaultTableModel)itemTable.getModel();
            itemTable.setRowSelectionInterval(0, 0);
            itemTable.requestFocus();
            
            }
        }else if(key==KeyEvent.VK_ESCAPE){
            cmbCategory.requestFocus();
        }
    }//GEN-LAST:event_txtItemNameKeyPressed

    private void addStockButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addStockButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_addStockButtonKeyPressed

    private void txtItemNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtItemNameFocusGained
        
    }//GEN-LAST:event_txtItemNameFocusGained

    private void itemTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemTableKeyPressed
        int key = evt.getKeyCode();
        if(key==KeyEvent.VK_ENTER){
            int row_index = itemTable.getSelectedRow();
            String value = itemTable.getModel().getValueAt(row_index,1).toString();
            txtItemName.setText(value);
            txtQuan.requestFocus();
        }
    }//GEN-LAST:event_itemTableKeyPressed

    private void cmbCategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbCategoryKeyPressed
               int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            txtItemName.requestFocus();
        }
    }//GEN-LAST:event_cmbCategoryKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStockButton;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtQuan;
    private javax.swing.JTextField txtpurchaseRate;
    // End of variables declaration//GEN-END:variables
}
