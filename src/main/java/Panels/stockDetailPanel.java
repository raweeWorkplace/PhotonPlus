/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import controller.functionTools;
import Dao.DataBase_Connection;
import java.awt.Font;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ranjan
 */
public class stockDetailPanel extends javax.swing.JPanel {
        protected Connection conInstance;
        protected Statement smtInstance,smtUsingDate;
        protected String queryUsingSelection,queryOpen, queryClose,reportSql,item_name;
        protected String excelFilePath = null,billId= null;
        DataBase_Connection dao;
        InputStream url7;
        DefaultTableModel salesTableModel,purchaseTableModel;
        private final JTextField filename = new JTextField(), dir = new JTextField();
        functionTools fnTools;
       

    /**
     * Creates new form salesSummaryPanel
     */
    public stockDetailPanel() {
        initComponents();
        dir.setEditable(false);
        filename.setEditable(false);
        dao = new DataBase_Connection();
        conInstance = dao.getConnection();
        fnTools= new functionTools();
        ButtonGroup();
        dateFrom.setDate(Calendar.getInstance().getTime());
        dateTo.setDate(Calendar.getInstance().getTime());
        item_count_table.getTableHeader().setFont(new Font("SansSerif", Font.ITALIC, 16));
        
    }
    
    
    private void ButtonGroup() {
        ButtonGroup sb = new ButtonGroup();
        sb.add(rbnDate);
        sb.add(rbnMonthly);   
    }

private void calculateSubtotal(){
        int i=0;
        double  subTotal = 0;
        if(item_count_table.getRowCount()!=0){
        while(i<item_count_table.getRowCount())
        {
        subTotal = subTotal+Double.parseDouble((String) item_count_table.getValueAt(i, 1));
        txtTotalPurchase.setText(new DecimalFormat("##.##").format(subTotal));
        i++;
        }
        }
        else{
             txtTotalPurchase.setText("");
        }
    }
    
    private void fillTable(String selectedTable, DefaultTableModel tableModel,JTextField txt){
         
        try
        {
            
            String item_name_search = "Select distinct(item_name) as name from sales_table";
            smtInstance = conInstance.createStatement();
            ResultSet rs = smtInstance.executeQuery(item_name_search);
            while(rs.next()){
                item_name = rs.getString("name");
                java.sql.Date dFrom = new java.sql.Date(dateFrom.getDate().getTime());
            java.sql.Date dTo = new java.sql.Date(dateTo.getDate().getTime());
            if(rbnMonthly.isSelected() ||rbnDate.isSelected()){
            if(rbnMonthly.isSelected()){
            
            queryUsingSelection = "select count(s.item_name) as count_item from "+selectedTable+ " and (date between '"+dFrom+"' And '"+dTo+"') and s.item_name = '"+item_name+"'";
         
            }
            else if(rbnDate.isSelected()){
            
            queryUsingSelection = "select count(s.item_name) as count_item from "+selectedTable+" and date ='" + dFrom + "' and s.item_name = '"+item_name+"'";
        }
            }
            else{
           queryUsingSelection = "select count(s.item_name) as count_item from "+selectedTable+" and s.item_name = '"+item_name+"'";
        }
         smtUsingDate = conInstance.createStatement();
            
            ResultSet rs1 = smtUsingDate.executeQuery(queryUsingSelection);
            
            
            if (rs1 != null){
                    
                int i = 0;
                while ( rs1.next() ) //step through the result set
                    {
                        i++;//count raws
                    }
                    int j = 0;
                    rs1.beforeFirst();
                    while (rs1.next()) 
                    {
                        String count_item = rs1.getString("count_item");
                        tableModel.insertRow(j,new Object[]{item_name,count_item});
                        j++;
                    }
                }
 
            }
            calculateSubtotal();
            
        } catch (SQLException ex) {
             Logger.getLogger(stockDetailPanel.class.getName()).log(Level.SEVERE, null, ex);
         }
        
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        rbnDate = new javax.swing.JRadioButton();
        btnSearch = new javax.swing.JButton();
        dateFrom = new com.toedter.calendar.JDateChooser();
        dateTo = new com.toedter.calendar.JDateChooser();
        rbnMonthly = new javax.swing.JRadioButton();
        txtTotalPurchase = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        item_count_table = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setBackground(java.awt.Color.darkGray);

        jPanel3.setBackground(java.awt.Color.darkGray);
        jPanel3.setBorder(null);

        rbnDate.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        rbnDate.setForeground(java.awt.Color.white);
        rbnDate.setText("Daily");
        rbnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnDateActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        dateFrom.setBackground(java.awt.Color.darkGray);
        dateFrom.setForeground(java.awt.Color.white);
        dateFrom.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        dateTo.setBackground(java.awt.Color.darkGray);
        dateTo.setForeground(java.awt.Color.white);
        dateTo.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        rbnMonthly.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        rbnMonthly.setForeground(java.awt.Color.white);
        rbnMonthly.setText("Monthly");
        rbnMonthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnMonthlyActionPerformed(evt);
            }
        });

        txtTotalPurchase.setEditable(false);
        txtTotalPurchase.setBackground(java.awt.Color.darkGray);
        txtTotalPurchase.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        txtTotalPurchase.setForeground(java.awt.Color.white);

        item_count_table.setBackground(java.awt.Color.darkGray);
        item_count_table.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        item_count_table.setForeground(java.awt.Color.white);
        item_count_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item  Name", "Count"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        item_count_table.setFillsViewportHeight(true);
        item_count_table.setGridColor(java.awt.Color.white);
        item_count_table.setRowHeight(24);
        item_count_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                item_count_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(item_count_table);
        if (item_count_table.getColumnModel().getColumnCount() > 0) {
            item_count_table.getColumnModel().getColumn(0).setResizable(false);
            item_count_table.getColumnModel().getColumn(0).setPreferredWidth(125);
            item_count_table.getColumnModel().getColumn(1).setResizable(false);
            item_count_table.getColumnModel().getColumn(1).setPreferredWidth(8);
        }

        jLabel3.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Total Item Printed :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotalPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(rbnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(rbnMonthly))))
                        .addGap(0, 212, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dateFrom, dateTo});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbnDate)
                    .addComponent(rbnMonthly))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(9, 9, 9)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTotalPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, txtTotalPurchase});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rbnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnDateActionPerformed
        if(rbnDate.isSelected()){
            dateTo.setEnabled(false);
            
        }
    }//GEN-LAST:event_rbnDateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
       // salesTableModel= (DefaultTableModel)salesTable.getModel();
        //fnTools.remove_table_data(salesTableModel, salesTable);
        purchaseTableModel = (DefaultTableModel)item_count_table.getModel();
        fnTools.remove_table_data(purchaseTableModel, item_count_table);
        //fillTable("bill_table",salesTableModel,txtTotalSales);
        fillTable("sales_table as s, bill_table as b where s.bill_no = b.bill_no ",purchaseTableModel,txtTotalPurchase);
//        if((!txtTotalSales.getText().isEmpty()) && (!txtTotalPurchase.getText().isEmpty())){
//            double due = Double.parseDouble(txtTotalSales.getText())- Double.parseDouble(txtTotalPurchase.getText());
//            txtBalance.setText(new DecimalFormat("##.##").format(due));
//            
//        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void rbnMonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnMonthlyActionPerformed
        dateTo.setEnabled(true);
    }//GEN-LAST:event_rbnMonthlyActionPerformed

    private void item_count_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_item_count_tableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_item_count_tableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnSearch;
    private com.toedter.calendar.JDateChooser dateFrom;
    private com.toedter.calendar.JDateChooser dateTo;
    private javax.swing.JTable item_count_table;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton rbnDate;
    private javax.swing.JRadioButton rbnMonthly;
    private javax.swing.JTextField txtTotalPurchase;
    // End of variables declaration//GEN-END:variables
}
