/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import controller.functionTools;
import beans.clientPojo;
import beans.journal_pojo;
import controller.client_registration_controller;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ranjan
 */
public class clientRegPanel extends javax.swing.JPanel {
        
        client_registration_controller controller;
        functionTools fnTools;
        DefaultTableModel client_detail_table_model;
        
    /**
     * Creates new form clientRegPanel
     */
    public clientRegPanel() {
        
        initComponents();
        fnTools = new functionTools();
        controller = new client_registration_controller();
        client_detail_table.getTableHeader().setFont(new Font("SansSerif", Font.ITALIC, 16));
        txtAddress.setText("JANAKPUR DHAM");
        txtOldDue.setText("0");        
    }
    
    private  void resetVendorDetails(){
        txtCompanyName.setText("");
        txtClientName.setText("");
        txtContact.setText("");
        txtOldDue.setText("0");
        txtConfirmDue.setText("");
        txtAddress.setText("JANAKPUR DHAM");
        txtClientName.setEditable(true);
        txtCompanyName.setEditable(true);
        txtContact.setEditable(true);
        txtAddress.setEditable(true);
        txtOldDue.setEditable(true);
        txtConfirmDue.setEditable(true);
                
    }
    
    public boolean validate_and_save_form(){
        if(txtCompanyName.getText().isEmpty()){
         JOptionPane.showMessageDialog(null,"Enter Company Name");
         txtCompanyName.requestFocus();
         return false;
        }
       else if(txtClientName.getText().isEmpty()){
         JOptionPane.showMessageDialog(null,"Enter Client Name");
         txtClientName.requestFocus();
         return false;
        }
        else if(txtContact.getText().isEmpty()){
         JOptionPane.showMessageDialog(null,"Enter Contact");
         txtContact.requestFocus();
         return false;
        }
        else if(!txtOldDue.getText().equals(txtConfirmDue.getText())){
         JOptionPane.showMessageDialog(null,"Old due Doesnot match");
         txtOldDue.requestFocus();
         return false;
        }
        else{
            return true;
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCompanyName = new javax.swing.JTextField();
        txtClientName = new javax.swing.JTextField();
        cmbClientType = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        txtOldDue = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtConfirmDue = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtContact = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        client_detail_table = new javax.swing.JTable();

        setBackground(java.awt.Color.darkGray);
        setBorder(null);

        txtCompanyName.setBackground(java.awt.Color.darkGray);
        txtCompanyName.setFont(new java.awt.Font("Century Schoolbook L", 0, 20)); // NOI18N
        txtCompanyName.setForeground(java.awt.Color.white);
        txtCompanyName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCompanyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCompanyNameActionPerformed(evt);
            }
        });
        txtCompanyName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCompanyNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCompanyNameKeyReleased(evt);
            }
        });

        txtClientName.setBackground(java.awt.Color.darkGray);
        txtClientName.setFont(new java.awt.Font("Century Schoolbook L", 0, 20)); // NOI18N
        txtClientName.setForeground(java.awt.Color.white);
        txtClientName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtClientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientNameActionPerformed(evt);
            }
        });
        txtClientName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtClientNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClientNameKeyReleased(evt);
            }
        });

        cmbClientType.setBackground(java.awt.Color.lightGray);
        cmbClientType.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        cmbClientType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dealer", "Customer" }));
        cmbClientType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClientTypeActionPerformed(evt);
            }
        });
        cmbClientType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbClientTypeKeyPressed(evt);
            }
        });

        jLabel8.setBackground(java.awt.Color.darkGray);
        jLabel8.setFont(new java.awt.Font("Century Schoolbook L", 1, 20)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("Address  :");

        jLabel7.setBackground(java.awt.Color.darkGray);
        jLabel7.setFont(new java.awt.Font("Century Schoolbook L", 1, 20)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("Old due :");

        btnSubmit.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        btnSubmit.setText("SUBMIT");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        txtOldDue.setBackground(java.awt.Color.darkGray);
        txtOldDue.setFont(new java.awt.Font("Century Schoolbook L", 0, 20)); // NOI18N
        txtOldDue.setForeground(java.awt.Color.white);
        txtOldDue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtOldDue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOldDueActionPerformed(evt);
            }
        });
        txtOldDue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOldDueKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOldDueKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOldDueKeyReleased(evt);
            }
        });

        jLabel5.setBackground(java.awt.Color.darkGray);
        jLabel5.setFont(new java.awt.Font("Century Schoolbook L", 1, 20)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Contact :");

        txtConfirmDue.setBackground(java.awt.Color.darkGray);
        txtConfirmDue.setFont(new java.awt.Font("Century Schoolbook L", 0, 20)); // NOI18N
        txtConfirmDue.setForeground(java.awt.Color.white);
        txtConfirmDue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtConfirmDue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmDueActionPerformed(evt);
            }
        });
        txtConfirmDue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConfirmDueKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConfirmDueKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConfirmDueKeyReleased(evt);
            }
        });

        jLabel1.setBackground(java.awt.Color.darkGray);
        jLabel1.setFont(new java.awt.Font("Century Schoolbook L", 1, 20)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Company :");

        jLabel9.setBackground(java.awt.Color.darkGray);
        jLabel9.setFont(new java.awt.Font("Century Schoolbook L", 1, 20)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Confirm :");

        jLabel3.setBackground(java.awt.Color.darkGray);
        jLabel3.setFont(new java.awt.Font("Century Schoolbook L", 1, 20)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Client :");

        txtAddress.setBackground(java.awt.Color.darkGray);
        txtAddress.setColumns(20);
        txtAddress.setFont(new java.awt.Font("Century Schoolbook L", 0, 16)); // NOI18N
        txtAddress.setForeground(java.awt.Color.white);
        txtAddress.setRows(5);
        txtAddress.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtAddress);

        txtContact.setBackground(java.awt.Color.darkGray);
        txtContact.setFont(new java.awt.Font("Century Schoolbook L", 0, 20)); // NOI18N
        txtContact.setForeground(java.awt.Color.white);
        txtContact.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContactKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactKeyReleased(evt);
            }
        });

        client_detail_table.setBackground(new java.awt.Color(184, 165, 165));
        client_detail_table.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        client_detail_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Index", "Company", "Client Name", "Contact No.", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        client_detail_table.setRowHeight(24);
        client_detail_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                client_detail_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(client_detail_table);
        if (client_detail_table.getColumnModel().getColumnCount() > 0) {
            client_detail_table.getColumnModel().getColumn(0).setResizable(false);
            client_detail_table.getColumnModel().getColumn(0).setPreferredWidth(5);
            client_detail_table.getColumnModel().getColumn(1).setResizable(false);
            client_detail_table.getColumnModel().getColumn(1).setPreferredWidth(150);
            client_detail_table.getColumnModel().getColumn(2).setResizable(false);
            client_detail_table.getColumnModel().getColumn(2).setPreferredWidth(150);
            client_detail_table.getColumnModel().getColumn(3).setResizable(false);
            client_detail_table.getColumnModel().getColumn(4).setResizable(false);
            client_detail_table.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtClientName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel9))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtConfirmDue, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtOldDue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtContact, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)))
                                    .addComponent(txtCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(484, 484, 484)
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(cmbClientType, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addComponent(jSeparator1)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtConfirmDue, txtContact, txtOldDue});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbClientType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCompanyName))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtClientName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtContact, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtOldDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtConfirmDue)
                                .addGap(7, 7, 7)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel3, jLabel5, jLabel7, jLabel8, txtCompanyName, txtOldDue});

    }// </editor-fold>//GEN-END:initComponents

    private void txtCompanyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCompanyNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCompanyNameActionPerformed

    private void txtCompanyNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyNameKeyPressed
        int key = evt.getKeyCode();
        if ((key == KeyEvent.VK_ENTER)&&(!txtCompanyName.getText().isEmpty())) {
            if(!fnTools.isEmpty(client_detail_table)){
            TableModel model2 = client_detail_table.getModel();
            String Name = model2.getValueAt(0, 1).toString();
            txtCompanyName.setText(Name);
            txtConfirmDue.setText("0");
            txtOldDue.setEditable(false);
            txtConfirmDue.setEditable(false);
            }
            txtClientName.requestFocus();
            
           }else if(key==KeyEvent.VK_ESCAPE){
            cmbClientType.requestFocus();
        }
    }//GEN-LAST:event_txtCompanyNameKeyPressed

    private void txtCompanyNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCompanyNameKeyReleased
            String obj = "";
            obj = cmbClientType.getSelectedItem().toString();
            String sql1;
            if("Dealer".equals(obj)){
                sql1 = "FROM clientPojo s where s.company_name Like'" + txtCompanyName.getText() + "%' and flag = 1";
            }else{
                sql1 = "FROM clientPojo s where s.company_name Like'" + txtCompanyName.getText() + "%' and flag = 0";
            }
            controller.fill_client_detail_table(client_detail_table, sql1);
        
    }//GEN-LAST:event_txtCompanyNameKeyReleased

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactActionPerformed

    private void txtContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyPressed
       int key = evt.getKeyCode();
        if ((key >= KeyEvent.VK_0 && key <= KeyEvent.VK_9) || (key >= KeyEvent.VK_NUMPAD0 && key <= KeyEvent.VK_NUMPAD9) || (key == KeyEvent.VK_BACK_SPACE)) {
            txtContact.setEditable(true);
        }else if ((key == KeyEvent.VK_ENTER)&&(!txtContact.getText().isEmpty())) {
            txtAddress.requestFocus();
        } else if ((key == KeyEvent.VK_ENTER)&&(txtContact.getText().isEmpty())) {
            if(!fnTools.isEmpty(client_detail_table)){
            TableModel model2 = client_detail_table.getModel();
            String con = model2.getValueAt(0, 3).toString();
            txtContact.setText(con);
            txtAddress.requestFocus();
            }
        }
        else {
            evt.consume();
            JOptionPane.showMessageDialog(null, "INVALID INSERT");
            txtContact.setText("");
        }
    }//GEN-LAST:event_txtContactKeyPressed

    private void txtContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactKeyReleased

    private void txtOldDueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOldDueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOldDueActionPerformed

    private void txtOldDueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOldDueKeyPressed
       int key = evt.getKeyCode();
        if ((key >= KeyEvent.VK_0 && key <= KeyEvent.VK_9)||(key >= KeyEvent.VK_DECIMAL) || (key >= KeyEvent.VK_NUMPAD0 && key <= KeyEvent.VK_NUMPAD9) || (key == KeyEvent.VK_BACK_SPACE)) {
            //txtOldDue.setEditable(true);
        }else if ((key == KeyEvent.VK_ENTER)&&(!txtOldDue.getText().isEmpty())) {
            txtConfirmDue.requestFocus();
        }else if ((key == KeyEvent.VK_ENTER)&&(txtOldDue.getText().isEmpty())) {
            if(!fnTools.isEmpty(client_detail_table)){
            TableModel model2 = client_detail_table.getModel();
            String Name = model2.getValueAt(0, 4).toString();
            txtOldDue.setText(Name);
            txtConfirmDue.requestFocus();
        }
        }
        
        else {
            evt.consume();
            JOptionPane.showMessageDialog(null, "INVALID INSERT");
            txtOldDue.setText("0");
        }
    }//GEN-LAST:event_txtOldDueKeyPressed

    private void txtOldDueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOldDueKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOldDueKeyReleased

    private void txtClientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientNameActionPerformed

    private void txtClientNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClientNameKeyPressed
        int key = evt.getKeyCode();
        if ((key == KeyEvent.VK_ENTER)&&(!txtClientName.getText().isEmpty())) {
            txtContact.requestFocus();
        }else if ((key == KeyEvent.VK_ENTER)&&(txtClientName.getText().isEmpty())) {
            if(!fnTools.isEmpty(client_detail_table)){
            TableModel model2 = client_detail_table.getModel();
            String Name = model2.getValueAt(0, 2).toString();
            txtClientName.setText(Name);
            txtContact.requestFocus();
            }
        }
        
            
    }//GEN-LAST:event_txtClientNameKeyPressed

    private void txtClientNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClientNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientNameKeyReleased

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
            String obj = "";
            obj = cmbClientType.getSelectedItem().toString();
            clientPojo pojo = new clientPojo();
                        
            pojo.setAddress(txtAddress.getText().toUpperCase());
            pojo.setCompany_name(txtCompanyName.getText().toUpperCase());
            pojo.setContact(txtContact.getText());
            

            journal_pojo j_pojo = new journal_pojo();
            j_pojo.setCredit(Double.parseDouble(txtOldDue.getText()));
            Date date = new Date();
            j_pojo.setDate(date);
            j_pojo.setDescription("Old Entry");
            
            if("Dealer".equals(obj)){
               
                pojo.setFlag(1);
                pojo.setClient_name(txtClientName.getText().toUpperCase());
                j_pojo.setFlag(1);
                
            }else{
                pojo.setFlag(0);
                j_pojo.setFlag(0);
                pojo.setClient_name(txtCompanyName.getText().toUpperCase());
              }
            
            if(validate_and_save_form()){
                    resetVendorDetails();
                    controller.register_client(pojo,j_pojo);
                    controller.fill_client_detail_table(client_detail_table, "from clientPojo where flag ="+pojo.getFlag()+"");
                    txtCompanyName.requestFocus();
            }
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void client_detail_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_client_detail_tableMouseClicked
        
    }//GEN-LAST:event_client_detail_tableMouseClicked

    private void txtContactKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyTyped
       if ((txtContact.getText().length() >9)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtContactKeyTyped

    private void txtOldDueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOldDueKeyTyped
       if ((txtOldDue.getText().length() >9)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtOldDueKeyTyped

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            txtOldDue.requestFocus();
        }else if ((key == KeyEvent.VK_ENTER)&&(txtAddress.getText().isEmpty())) {
            if(!fnTools.isEmpty(client_detail_table)){
            TableModel model2 = client_detail_table.getModel();
            String Name = model2.getValueAt(0, 5).toString();
            txtAddress.setText(Name);
            txtOldDue.selectAll();
            txtOldDue.requestFocus();
            }
            
        }
    }//GEN-LAST:event_txtAddressKeyPressed

    private void cmbClientTypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbClientTypeKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            txtCompanyName.requestFocus();
        }
    }//GEN-LAST:event_cmbClientTypeKeyPressed

    private void txtConfirmDueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmDueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmDueActionPerformed

    private void txtConfirmDueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmDueKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmDueKeyTyped

    private void txtConfirmDueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmDueKeyPressed
        int key = evt.getKeyCode();
        if ((key >= KeyEvent.VK_0 && key <= KeyEvent.VK_9)||(key >= KeyEvent.VK_DECIMAL)  || (key >= KeyEvent.VK_NUMPAD0 && key <= KeyEvent.VK_NUMPAD9) || (key == KeyEvent.VK_BACK_SPACE)) {
            //txtConfirmDue.setEditable(true);
        }else if ((key == KeyEvent.VK_ENTER)&&(!txtConfirmDue.getText().isEmpty())) {
            btnSubmit.requestFocus();
        }else {
            evt.consume();
            JOptionPane.showMessageDialog(null, "INVALID INSERT");
            txtConfirmDue.setText("");
        }
    }//GEN-LAST:event_txtConfirmDueKeyPressed

    private void txtConfirmDueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmDueKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmDueKeyReleased

    private void cmbClientTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClientTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClientTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JTable client_detail_table;
    public javax.swing.JComboBox<String> cmbClientType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtClientName;
    public javax.swing.JTextField txtCompanyName;
    private javax.swing.JTextField txtConfirmDue;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtOldDue;
    // End of variables declaration//GEN-END:variables
}
